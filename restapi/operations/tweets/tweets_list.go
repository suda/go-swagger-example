// Code generated by go-swagger; DO NOT EDIT.

package tweets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// TweetsListHandlerFunc turns a function with the right signature into a tweets list handler
type TweetsListHandlerFunc func(TweetsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn TweetsListHandlerFunc) Handle(params TweetsListParams) middleware.Responder {
	return fn(params)
}

// TweetsListHandler interface for that can handle valid tweets list params
type TweetsListHandler interface {
	Handle(TweetsListParams) middleware.Responder
}

// NewTweetsList creates a new http.Handler for the tweets list operation
func NewTweetsList(ctx *middleware.Context, handler TweetsListHandler) *TweetsList {
	return &TweetsList{Context: ctx, Handler: handler}
}

/*TweetsList swagger:route GET /tweets tweets tweetsList

List the tweets

*/
type TweetsList struct {
	Context *middleware.Context
	Handler TweetsListHandler
}

func (o *TweetsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewTweetsListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
